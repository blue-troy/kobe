FROM golang:1.14 as stage-build
LABEL stage=stage-build
WORKDIR /build/kobe
ARG GOARCH

ENV GO111MODULE=on
ENV GOOS=linux
ENV GOARCH=$GOARCH
ENV CGO_ENABLED=1

RUN apt-get update
COPY go.mod go.sum ./
RUN go mod download
COPY . .
RUN make build_server_linux GOARCH=$GOARCH

FROM kubeoperator/euleros:2.1

RUN echo > /etc/yum.repos.d/Euler-Base.repo \
    && echo -e "[base]\nname=EulerOS-2.0SP8 base\nbaseurl=http://repo.huaweicloud.com/euler/2.8/os/aarch64/\nenabled=1\ngpgcheck=1\ngpgkey=http://repo.huaweicloud.com/euler/2.8/os/RPM-GPG-KEY-EulerOS" >> /etc/yum.repos.d/Euler-Base.repo \
    && curl -sSLo /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo \
    && yum install -y python3-pip sshpass \
    && pip3 install -U pip \
    && pip3 install --no-cache-dir ansible==2.10.4 netaddr \
    && yum clean all \
    && rm -rf /var/cache/yum/*

RUN mkdir /root/.ssh  \
    && touch /root/.ssh/config \
    && echo -e "Host *\n\tStrictHostKeyChecking no\n\tUserKnownHostsFile /dev/null" > /root/.ssh/config

COPY --from=stage-build /build/kobe/dist/etc /etc/
COPY --from=stage-build /build/kobe/dist/usr /usr/
COPY --from=stage-build /build/kobe/dist/var /var/

RUN mkdir /var/kobe/conf -p
COPY conf/server.key /var/kobe/conf
COPY conf/server.pem /var/kobe/conf

RUN echo 'kobe-server' >> /root/entrypoint.sh

RUN chmod 550 /root/entrypoint.sh /usr/local/bin/kobe-server /usr/local/bin/kobe-inventory

VOLUME ["/var/kobe/data"]

EXPOSE 8080

CMD ["sh","/root/entrypoint.sh"]
